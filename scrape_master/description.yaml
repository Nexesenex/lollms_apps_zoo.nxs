author: ParisNeo with gemini 2.5 & claude
category: Web Scraping, Developer Tools, Utilities
creation_date: '2025-05-07T13:00:42.000000' # Original generation timestamp
description: |
  ScrapeMaster GUI is a PyQt5 application designed as a user-friendly front-end for the ScrapeMaster web scraping library.
  It allows users to input a URL, initiate scraping, and view the extracted content as raw Markdown or rendered HTML.
  The application supports saving and loading scraped data in JSON format, exporting content as Markdown files, and managing recent files.
  Users can configure scraping settings, including selecting preferred scraping strategies, enabling headless browser mode, and setting crawl depth.
  The GUI features theme support (via qt_material) for a customizable user experience and icon integration (via qtawesome) for improved usability.
disclaimer: |
  This application is provided "as-is" without any warranties. The accuracy and completeness of the scraped output depend on the ScrapeMaster library, the target website's structure, and the user's configuration.
  Users should review the output carefully and ensure compliance with website terms of service. The developers are not responsible for any issues arising from the use of this tool.
last_update_date: '2025-05-07T13:00:42.000000' # Assuming this is the last update for this version
model: "Provides a graphical interface for web scraping using the ScrapeMaster library, simplifying content extraction from websites."
name: ScrapeMaster GUI
version: 1.0 # Version for this specific GUI application
features:
  - User-friendly PyQt5 interface for web scraping.
  - Input URL and initiate scraping with a button click.
  - View scraped content in:
    - Raw Markdown format (editable).
    - Rendered HTML preview.
  - File operations:
    - Save scraped URL and Markdown content to JSON.
    - Load scraped data from JSON.
    - Export raw Markdown to .md files.
    - Manage a list of recent files.
  - Customizable scraping settings:
    - Select and order scraping strategies (e.g., requests, playwright, selenium based on ScrapeMaster's capabilities).
    - Toggle headless browser mode for browser-based strategies.
    - Set maximum crawl depth for multi-page scraping.
  - Theme support with qt_material for customizable UI appearance.
  - Icon integration with qtawesome for better UX.
  - Status bar for real-time feedback, warnings, and errors.
  - Copy raw Markdown to clipboard.
  - Automatic URL scheme detection (http/https).
tags:
  - Web Scraping
  - GUI
  - PyQt5
  - ScrapeMaster
  - Markdown
  - HTML
  - Data Extraction
  - Developer Tool
  - Web Content
license: MIT # Assuming, based on typical ParisNeo projects
repository: https://github.com/ParisNeo/scrapemaster # Placeholder, adjust if actual repo for ScrapeMaster GUI exists
documentation: https://github.com/ParisNeo/scrapemaster/wiki # Placeholder
support: # Placeholder
privacy_policy: # Placeholder, or N/A
terms_of_service: # Placeholder, or N/A