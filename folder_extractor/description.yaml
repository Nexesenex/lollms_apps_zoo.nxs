author: ParisNeo with gemini 2.5
category: Developer Tools, Utilities, AI Tools
creation_date: '2025-05-07T10:00:00.000000'
description: |
  Folder Structure to Text (Folder Extractor) is a comprehensive PyQt5 application (with a FastAPI web interface) designed to generate a Markdown-formatted text representation of a specified folder's structure and contents.
  It allows users to select a project folder, customize inclusion and exclusion rules (using presets, specific folder/file names, extensions, and glob patterns), and control aspects like maximum file size for content extraction.
  A key feature is the ability to select files for full content inclusion or, for Python and JavaScript files, to extract only their structural signatures (classes, functions, methods).
  The tool is particularly useful for developers, technical writers, and AI users who need to create detailed project overviews, prepare context for Large Language Models (LLMs), or document codebases.
  It features a user-friendly interface with theme support, environment settings management (load/save configurations), integration of external documentation files into the output, and customizable AI prompt templates designed for interactive, planned code generation workflows.
disclaimer: |
  This application is provided "as-is" without any warranties. The accuracy and completeness of the generated output depend on the user's configuration and the nature of the scanned files.
  Signature extraction for JavaScript is regex-based and may not be as robust as Python's AST-based extraction.
  Users should review the output carefully, especially when used for critical documentation or as input for other systems. The developers are not responsible for any issues arising from the use of this tool.
last_update_date: '2025-07-08T14:07:34.000000' # Placeholder, will be updated by generation script
model: "Prepares context for Large Language Models (LLMs) and aids in documentation and guided code generation."
name: Folder Structure to Text
version: 2.5 # Version bump for signature extraction and prompt overhaul
features:
  - Generates a text-based tree representation of folder structures.
  - Includes content of text-based files within the output.
  - For Python (.py) and JavaScript (.js) files, option to extract structural signatures (classes, functions, methods with docstrings/JSDoc) instead of full content.
  - Supports Markdown formatting for structure and file contents/signatures.
  - Advanced filtering:
    - Exclusion presets (Python, Node.js, C/C++, etc.).
    - Custom exclusion of folders, extensions, and glob patterns.
    - Custom inclusion of specific paths or patterns.
    - Dynamic exclusion patterns.
  - Configurable maximum file size for content inclusion.
  - User-friendly Web UI (FastAPI + TailwindCSS) and optional PyQt5 GUI.
  - Environment/Configuration Management (Client-side LocalStorage for Web UI):
    - Save and load full application settings (paths, filters, prompts).
  - AI Prompting Assistance:
    - Manage and use customizable prompt templates (with placeholders like {FOLDER_NAME}, {AUTHOR}).
    - New AI templates designed for planned, acknowledged, step-by-step code generation (Full Code & Guided Changes versions).
    - Integrate content from selected external documentation files directly into the final output/prompt.
  - Output Management:
    - Raw Markdown output display.
    - Basic rendered Markdown preview.
    - Copy output to clipboard.
    - Option to automatically save output to a file.
  - Status bar for feedback, warnings, and errors.
  - Theme support (light/dark mode).
tags:
  - Folder Structure
  - Markdown
  - Code Analysis
  - Code Signatures
  - Developer Tool
  - FastAPI
  - Web UI
  - PyQt5
  - Context Engineering
  - AI Prompting
  - Guided Code Generation
  - Text Generation
  - File Management
  - Documentation Aid
  - Project Overview
license: MIT
repository: https://github.com/ParisNeo/folder_extractor
documentation: https://github.com/ParisNeo/folder_extractor/wiki
support: # Placeholder, adjust if known
privacy_policy: # Placeholder, or N/A
terms_of_service: # Placeholder, or N/A